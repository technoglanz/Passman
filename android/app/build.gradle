apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")
apply plugin: 'com.google.gms.google-services'

/**
 * Configuration for the React Native Android app.
 */
react {
    /* Autolinking */
    autolinkLibrariesWithApp()
}

/**
 * ProGuard configuration for release builds.
 */
def enableProguardInReleaseBuilds = false

/**
 * Preferred JavaScriptCore (JSC) flavor.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.passman"
    defaultConfig {
        applicationId "com.passman"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 3
        versionName "3.0"
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Important: Use your own keystore file for production builds.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    // React Native core dependency
    implementation("com.facebook.react:react-android")

    // Hermes or JSC dependency based on the Hermes configuration
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
